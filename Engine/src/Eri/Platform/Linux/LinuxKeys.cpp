#include "Eri/Platform/Linux/LinuxKeys.h"

#include <X11/keysym.h>

#include "Eri/Utils/Events/KeyPress/EventKeyPress.h"

namespace ERI
{
enum Keys LinuxKeys::translateKey(u32 x11_key)
{
  switch (x11_key)
  {
    case XK_BackSpace:
      return Keys::BackSpace;
    case XK_Tab:
      return Keys::Tab;
    case XK_Return:
      return Keys::Enter;
    case XK_Shift_L:
    case XK_Shift_R:
      return Keys::Shift;
    case XK_Control_L:
    case XK_Control_R:
      return Keys::Control;
    case XK_Alt_L:
    case XK_Alt_R:
      return Keys::Alt;
    case XK_Caps_Lock:
      return Keys::CapsLock;
    case XK_Escape:
      return Keys::Escape;
    case XK_space:
      return Keys::Space;
    case XK_Page_Up:
      return Keys::PageUp;
    case XK_Page_Down:
      return Keys::PageDown;
    case XK_End:
      return Keys::End;
    case XK_Home:
      return Keys::Home;
    case XK_Left:
      return Keys::ArrowLeft;
    case XK_Up:
      return Keys::ArrowUp;
    case XK_Right:
      return Keys::ArrowRight;
    case XK_Down:
      return Keys::ArrowDown;
    case XK_Print:
      return Keys::PrintScreen;
    case XK_Insert:
      return Keys::Insert;
    case XK_Delete:
      return Keys::Delete;
    case XK_0:
      return Keys::Zero;
    case XK_1:
      return Keys::One;
    case XK_2:
      return Keys::Two;
    case XK_3:
      return Keys::Three;
    case XK_4:
      return Keys::Four;
    case XK_5:
      return Keys::Five;
    case XK_6:
      return Keys::Six;
    case XK_7:
      return Keys::Seven;
    case XK_8:
      return Keys::Eight;
    case XK_9:
      return Keys::Nine;
    case XK_A:
    case XK_a:
      return Keys::A;
    case XK_B:
    case XK_b:
      return Keys::B;
    case XK_C:
    case XK_c:
      return Keys::C;
    case XK_D:
    case XK_d:
      return Keys::D;
    case XK_E:
    case XK_e:
      return Keys::E;
    case XK_F:
    case XK_f:
      return Keys::F;
    case XK_G:
    case XK_g:
      return Keys::G;
    case XK_H:
    case XK_h:
      return Keys::H;
    case XK_I:
    case XK_i:
      return Keys::I;
    case XK_J:
    case XK_j:
      return Keys::J;
    case XK_K:
    case XK_k:
      return Keys::K;
    case XK_L:
    case XK_l:
      return Keys::L;
    case XK_M:
    case XK_m:
      return Keys::M;
    case XK_N:
    case XK_n:
      return Keys::N;
    case XK_O:
    case XK_o:
      return Keys::O;
    case XK_P:
    case XK_p:
      return Keys::P;
    case XK_Q:
    case XK_q:
      return Keys::Q;
    case XK_R:
    case XK_r:
      return Keys::R;
    case XK_S:
    case XK_s:
      return Keys::S;
    case XK_T:
    case XK_t:
      return Keys::T;
    case XK_U:
    case XK_u:
      return Keys::U;
    case XK_V:
    case XK_v:
      return Keys::V;
    case XK_W:
    case XK_w:
      return Keys::W;
    case XK_X:
    case XK_x:
      return Keys::X;
    case XK_Y:
    case XK_y:
      return Keys::Y;
    case XK_Z:
    case XK_z:
      return Keys::Z;
    case XK_Super_L:
    case XK_Super_R:
      return Keys::Super;
    // This got tricky due to keysyms
    case XK_KP_Insert:
      return Keys::NumZero;
    case XK_KP_End:
      return Keys::NumOne;
    case XK_KP_Down:
      return Keys::NumTwo;
    case XK_KP_Page_Down:
      return Keys::NumThree;
    case XK_KP_Left:
      return Keys::NumFour;
    case XK_KP_Begin:
      return Keys::NumFive;
    case XK_KP_Right:
      return Keys::NumSix;
    case XK_KP_Home:
      return Keys::NumSeven;
    case XK_KP_Up:
      return Keys::NumEight;
    case XK_KP_Page_Up:
      return Keys::NumNine;
    case XK_KP_Multiply:
      return Keys::NumMultiply;
    case XK_KP_Add:
      return Keys::NumAdd;
    case XK_KP_Subtract:
      return Keys::NumMinus;
    case XK_KP_Delete:
      return Keys::NumDot;
    case XK_KP_Divide:
      return Keys::NumDivide;
    case XK_Num_Lock:
      return Keys::NumsLock;
    case XK_F1:
      return Keys::FuncOne;
    case XK_F2:
      return Keys::FuncTwo;
    case XK_F3:
      return Keys::FuncThree;
    case XK_F4:
      return Keys::FuncFour;
    case XK_F5:
      return Keys::FuncFive;
    case XK_F6:
      return Keys::FuncSix;
    case XK_F7:
      return Keys::FuncSeven;
    case XK_F8:
      return Keys::FuncEight;
    case XK_F9:
      return Keys::FuncNine;
    case XK_F10:
      return Keys::FuncTen;
    case XK_F11:
      return Keys::FuncEleven;
    case XK_F12:
      return Keys::FuncTwelve;
    // These are keyboard specific? I think I have a normal american keyboard ~_~
    // http://www.kbdedit.com/manual/low_level_vk_list.html
    case XK_semicolon:
      return Keys::SemiColon;
    case XK_equal:
      return Keys::Equals;
    case XK_comma:
      return Keys::Comma;
    case XK_minus:
      return Keys::Minus;
    case XK_period:
      return Keys::Period;
    case XK_slash:
      return Keys::FrontSlash;
    case XK_grave:
      return Keys::Grave;
    case XK_bracketleft:
      return Keys::LeftBracket;
    case XK_backslash:
      return Keys::BackSlash;
    case XK_bracketright:
      return Keys::RightBracket;
    case XK_apostrophe:
      return Keys::Apostrophe;
    default:
      return Keys::MAX;

  }
}
  
} // namespace ERI


